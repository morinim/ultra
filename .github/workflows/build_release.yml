name: Build and test all platforms

on:
  pull_request:
  push:
    branches:
      - main
    paths-ignore:
      - '**.md'
      - .gitignore
  workflow_dispatch:

jobs:
  build-test:
    name: ${{matrix.config.name}}
    runs-on: ${{matrix.config.os}}
    strategy:
      fail-fast: false
      matrix:
        config:
        - {
            name: "Windows Latest MSVC Debug",
            artifact: "windows-msvc-debug.txz",
            os: windows-latest,
            build_type: "Debug",
            cc: "cl", cxx: "cl"
          }
        - {
            name: "Windows Latest MSVC Release",
            artifact: "windows-msvc-release.txz",
            os: windows-latest,
            build_type: "RelWithDebInfo",
            cc: "cl", cxx: "cl"
          }
        - {
            name: "Ubuntu Latest GCC Debug",
            artifact: "linux-debug.txz",
            os: ubuntu-latest,
            build_type: "Debug",
            cc: "gcc", cxx: "g++"
          }
        - {
            name: "Ubuntu Latest GCC Releas",
            artifact: "linux-release.txz",
            os: ubuntu-latest,
            build_type: "Release",
            cc: "gcc", cxx: "g++"
          }
        #- {
        #    name: "macOS Latest Clang",
        #    artifact: "macos.txz",
        #    os: macos-latest,
        #    cc: "clang", cxx: "clang++"
        #  }

    steps:
      - uses: actions/checkout@v4

      - name: Configure CMake
        env:
          CXX: ${{matrix.config.cxx}}
        # Use bash so we can use the same syntax for environment variable
        # access regardless of the host operating system
        working-directory: ${{github.workspace}}
        shell: bash
        run: cmake -DCMAKE_BUILD_TYPE=${{matrix.config.build_type}} -B build/ src/
      - name: Print Environment Variables
        run: printenv
      - name: Build
        working-directory: ${{github.workspace}}
        shell: bash
        run: cmake --build build/ --config ${{matrix.config.build_type}}

      #- name: Test
      #  working-directory: ${{github.workspace}}/build/test
      #  run: ctest --output-on-failure -C ${{matrix.config.build_type}}

      #- name: Pack
      #  working-directory: ${{github.workspace}}/build
      #  run: cmake -E tar -Jcfv ../${{matrix.config.artifact}} .

      #- name: Upload
      #  uses: actions/upload-artifact@v4
      #  with:
      #    path: ./${{matrix.config.artifact}}
      #    name: ${{matrix.config.artifact}}
