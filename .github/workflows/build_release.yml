name: Build and test all platforms

on:
  pull_request:
  push:
    branches:
      - main
    paths-ignore:
      - '**.md'
      - .gitignore
  workflow_dispatch:

jobs:
  build-test:
    name: ${{ matrix.config.name }} ${{ matrix.build_type }}
    env:
      BUILD_TYPE: Release
    runs-on: ${{ matrix.config.os }}
    strategy:
      fail-fast: false
      matrix:
        build_type: [Debug, Release]
        config:
        - {
            name: "Windows Latest MSVC",
            artifact: "windows-msvc.txz",
            os: windows-latest,
            cc: "cl", cxx: "cl"
          }
        - {
            name: "Ubuntu Latest GCC",
            artifact: "linux.txz",
            os: ubuntu-latest,
            cc: "gcc", cxx: "g++"
          }
        #- {
        #    name: "macOS Latest Clang",
        #    artifact: "macos.txz",
        #    os: macos-latest,
        #    cc: "clang", cxx: "clang++"
        #  }
        exclude:
        - config.os: windows-latest
          build_type: Release

    steps:
      - uses: actions/checkout@v4

      - name: Configure CMake
        env:
          CXX: ${{ matrix.config.cxx }}
        # Use bash so we can use the same syntax for environment variable
        # access regardless of the host operating system
        working-directory: ${{github.workspace}}
        shell: bash
        run: cmake -DCMAKE_BUILD_TYPE=${{ matrix.build_type }} -B build/ src/

      - name: Build
        working-directory: ${{github.workspace}}
        shell: bash
        run: cmake --build build/ --config ${{ matrix.build_type }}

      - name: Test
        working-directory: ${{github.workspace}}/build/test
        run: ctest --output-on-failure -C ${{ matrix.build_type }}

      - name: Pack
        working-directory: ${{github.workspace}}/build
        run: cmake -E tar -Jcfv ../${{ matrix.config.artifact }} .

      - name: Upload
        uses: actions/upload-artifact@v4
        with:
          path: ./${{ matrix.config.artifact }}
          name: ${{ matrix.config.artifact }}
